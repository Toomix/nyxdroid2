apply plugin: 'com.android.application'
apply plugin: 'com.google.gms.google-services'

def androidHome = System.getenv("ANDROID_HOME")
def pass = System.getenv("RELEASE_PASS")

def versionMajor = 2
def versionMinor = 1
def versionPatch = 446

android {
    compileSdkVersion 30
    buildToolsVersion "30.0.2"

    defaultConfig {
        applicationId "sk.virtualvoid.nyxdroid.v2"
        minSdkVersion 16
        targetSdkVersion 30
        //TODO hack for the DefaultHttpClient, its better to use another library, DefaultHttpClient is deprecated
        useLibrary 'org.apache.http.legacy'
        multiDexEnabled true
        versionCode versionMajor * 10000 + versionMinor * 100 + versionPatch
        versionName "${versionMajor}.${versionMinor}.${versionPatch}"
    }

    signingConfigs {
        release {
                storeFile file(androidHome + "/release_key.keystore")
                storePassword pass
                keyAlias "nyxdroid"
                keyPassword pass
            }
        }


    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.txt'
        }
    }

    lintOptions {
        checkReleaseBuilds false
        abortOnError false
    }

    packagingOptions {
        exclude 'META-INF/DEPENDENCIES.txt'
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/NOTICE.txt'
        exclude 'META-INF/NOTICE'
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/DEPENDENCIES'
        exclude 'META-INF/notice.txt'
        exclude 'META-INF/license.txt'
        exclude 'META-INF/dependencies.txt'
        exclude 'META-INF/LGPL2.1'
    }

    applicationVariants.all { variant ->
        variant.outputs.all {
            def project = "nyxdroid"
            def newApkName = project + "-" + "${defaultConfig.versionName}" + ".apk"
            outputFileName = newApkName
        }
    }

}

dependencies {
    implementation project(':photoview')
    implementation project(':pulltorefreshactionbar')
    implementation project(':slidingmenujf')
    implementation "commons-logging:commons-logging-api:1.1"
    implementation 'androidx.appcompat:appcompat:1.2.0'
    implementation "androidx.legacy:legacy-preference-v14:1.0.0"
    implementation "androidx.preference:preference:1.1.1"
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    implementation 'com.google.android.gms:play-services-base:17.6.0'
    implementation 'com.google.firebase:firebase-core:18.0.2'
    implementation 'com.google.firebase:firebase-messaging:21.0.1'

    // Hack for universal image loader :)
    implementation 'com.github.nostra13:Android-Universal-Image-Loader:f6a9615868482672c3630cb7db6dcf43391e80de'

    implementation 'org.jsoup:jsoup:1.13.1'
    implementation 'pub.devrel:easypermissions:3.0.0'

    def multidex_version = "2.0.1"
    implementation "androidx.multidex:multidex:$multidex_version"

    implementation fileTree(dir: 'libs', include: ['*.jar'])
}

